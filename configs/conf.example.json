[
  {
    "id": "parse-json",
    "conf": [
      {
        "desc": "parse json string",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "parser-json"
      }
    ]
  },
  {
    "id": "notify-desktop",
    "conf": [
      {
        "desc": "parse param in json",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-json"
      },
      {
        "desc": "notify desktop",
        "timeout": 500,
        "required": true,
        "handler_builder_name": "notify-desktop",
        "handler_builder_conf": {
          "app_name": "misa cli"
        }
      }
    ]
  },
  {
    "id": "join-newline",
    "conf": [
      {
        "desc": "join slice with newline",
        "timeout": 10000,
        "required": true,
        "handler_builder_name": "string-join",
        "handler_builder_conf": {
          "separator": "\n"
        }
      }
    ]
  },
  {
    "id": "parse-unix",
    "conf": [
      {
        "desc": "parse unix timestamp into time.Time in local timezone",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "parser-unix"
      }
    ]
  },
  {
    "id": "write-to-clipboard",
    "conf": [
      {
        "desc": "write request data into clipboard",
        "timeout": 10000,
        "required": true,
        "handler_builder_name": "io-writer-clipboard"
      }
    ]
  },
  {
    "id": "read-from-clipboard",
    "conf": [
      {
        "desc": "read data from clipboard",
        "timeout": 10000,
        "required": true,
        "handler_builder_name": "io-reader-clipboard"
      }
    ]
  },
  {
    "id": "print",
    "conf": [
      {
        "desc": "print data into stdout",
        "timeout": 1000,
        "required": true,
        "handler_builder_name": "io-writer-stdout"
      }
    ]
  },
  {
    "id":  "gen-int-slice",
    "conf": [
      {
        "desc": "parse json into map",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-json"
      },
      {
        "desc": "generate int slice",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "generator-int-range"
      }
    ]
  },
  {
    "id": "gen-time-slice",
    "conf": [
      {
        "desc": "parse json to map",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-json"
      },
      {
        "desc": "generate time slice",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "generator-time-range"
      }
    ]
  },
  {
    "id": "parse-unix-from-clipboard",
    "conf": [
      {
        "desc": "read data",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "read-from-clipboard"
      },
      {
        "desc": "parse unix",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-unix"
      }
    ]
  },
  {
    "id": "sum-int",
    "conf": [
      {
        "desc": "sum int",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "iterator-reduce",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "int(reduced) ? int(reduced) + int(value) : int(value)"
        }
      }
    ]
  },
  {
    "id": "gen-int-square-slice",
    "conf": [
      {
        "desc": "gen int slice",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "gen-int-slice"
      },
      {
        "desc": "square each int",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "int(value) * int(value)"
        }
      },
      {
        "desc": "sum",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "sum-int"
      }
    ]
  },
  {
    "id": "gen-in-time-slice",
    "conf": [
      {
        "desc": "gen daily slice",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "gen-time-slice"
      },
      {
        "desc": "each format yyyy_mm_dd",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "import(\"times\").time_format(value, \"2006_01_02\")"
        }
      },
      {
        "desc": "each concat",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "\"ALTER TABLE innercheck.t_pay_trans_\"+ value + \" ADD COLUMN F_bank_trans_type tinyint(8) unsigned not null default 1, add column F_trans_business_entry tinyint(8) unsigned not null default 1;\""
        }
      },
      {
        "desc": "join together",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "join-newline"
      },
      {
        "desc": "write to file",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "io-writer-file",
        "handler_builder_conf": {
          "path": "service-inner-check_add_F_bank_trans_type_and_F_trans_business_entry_to_pay_trans.sql"
        }
      }
    ]
  },
  {
    "id": "gen-in-int-slice",
    "conf": [
      {
        "desc": "gen int slice",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "gen-int-slice"
      },
      {
        "desc": "each db index, table index",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "{ db_idx: value/10, table_idx: value%10 }"
        }
      },
      {
        "desc": "each concat",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "\"ALTER TABLE pay_\" + value.db_idx + \".t_trans_\" + value.table_idx + \" ADD COLUMN F_bank_trans_type tinyint(8) unsigned not null default 1, add column F_trans_business_entry tinyint(8) unsigned not null default 1;\""
        }
      },
      {
        "desc": "join together",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "join-newline"
      },
      {
        "desc": "write to file",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "io-writer-file",
        "handler_builder_conf": {
          "path": "service-pay_add_F_bank_trans_type_and_F_trans_business_entry_to_trans.sql"
        }
      }
    ]
  },
  {
    "id": "get-first-pipeline-id",
    "conf": [
      {
        "desc": "parse json into map",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-json"
      },
      {
        "desc": "do http request",
        "timeout": 10000,
        "required": true,
        "handler_builder_name": "net-http"
      },
      {
        "desc": "get body",
        "timeout": 100,
        "required": true,
        "handler_builder_name": "finder-json-attr",
        "handler_builder_conf": {
          "attr_path": "body"
        }
      },
      [
        {
          "desc": "find first item.conf.timeout",
          "timeout": 100,
          "required": true,
          "handler_builder_name": "finder-json-attr",
          "handler_builder_conf": {
           "attr_path": "[0].conf[0].timeout"
          }
        },
        {
          "desc": "find second item.conf.timeout",
          "timeout": 100,
          "required": true,
          "handler_builder_name": "finder-json-attr",
          "handler_builder_conf": {
            "attr_path": "[1].conf[0].timeout"
          }
        }
      ],
      {
        "desc": "sum",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "sum-int"
      }
    ]
  },
  {
    "id": "mysql-endless_music",
    "conf": [
      {
        "desc": "parse json into map",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-json"
      },
      {
        "desc": "create mysql client",
        "timeout": 5000,
        "required": true,
        "handler_builder_name": "mysql",
        "handler_builder_conf": {
          "dsn": "root:root@tcp(127.0.0.1:3306)/endless_music",
          "max_idle_conns": 10,
          "max_open_conns": 30,
          "conn_max_life_second": 100
        }
      }
    ]
  },
  {
    "id": "redis-local",
    "conf": [
      {
        "desc": "parse json into map",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-json"
      },
      {
        "desc": "create redis client",
        "timeout": 2000,
        "required": true,
        "handler_builder_name": "redis",
        "handler_builder_conf": {
          "addr": "127.0.0.1:6379"
        }
      }
    ]
  },
  {
    "id": "parse-xlsx",
    "conf": [
      {
        "desc": "parse json into map",
        "timeout": 100,
        "required": true,
        "ref_handler_id": "parse-json"
      },
      {
        "desc": "parse xlsx file",
        "timeout": 100000,
        "required": true,
        "handler_builder_name": "parser-xlsx"
      }
    ]
  },
  {
    "id": "parse-bank-xlsx",
    "conf": [
      {
        "desc": "parse xlsx",
        "timeout": 20000,
        "required": true,
        "ref_handler_id": "parse-xlsx"
      },
      {
        "desc": "get bank no and bank name",
        "timeout": 20000,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "{ bank_no: import(\"text\").replace(value.行号, \" \", \"\", -1), bank_name: import(\"text\").replace(value.行名, \" \", \"\", -1) }"
        }
      },
      {
        "desc": "build insert one line",
        "timeout": 20000,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "\"\t('\" + value.bank_no + \"', '\" + value.bank_name + \"')\""
        }
      },
      {
        "desc": "chunk with 1000",
        "timeout": 20000,
        "required": true,
        "handler_builder_name": "iterator-chunk",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "1000"
        }
      },
      {
        "desc": "map",
        "timeout": 30000,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "\"INSERT INTO t_bank_code(`F_bank_code`, `F_bank_name`) VALUES\\n\" + import(\"text\").join(value, \",\\n\") +\";\""
        }
      },
      {
        "desc": "join",
        "timeout": 10000,
        "required": true,
        "ref_handler_id": "join-newline"
      },
      {
        "desc": "write to file",
        "timeout": 1000,
        "required": true,
        "handler_builder_name": "io-writer-file",
        "handler_builder_conf": {
          "path": "/Users/Antony/Documents/g7pay/sql/service-area/bank-info.sql"
        }
      }
    ]
  },
  {
    "id": "parse-xlsx-test",
    "conf": [
      {
        "desc": "parse xlsx",
        "timeout": 20000,
        "required": true,
        "ref_handler_id": "parse-xlsx"
      },
      {
        "desc": "parse map",
        "timeout": 10000,
        "required": true,
        "handler_builder_name": "iterator-map",
        "handler_builder_conf": {
          "interpreter_name": "tengo",
          "script": "len(value)"
        }
      }
    ]
  }
]